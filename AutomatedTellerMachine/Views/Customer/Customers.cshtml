@using Microsoft.Extensions.Options;
@using BusinessLogicLayer.Services;
@inject IOptions<ApiSettings> ApiSettings


@{
    ViewData["Title"] = "Customers";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<ul class="breadcrumb text-primary">
    <li class="breadcrumb-item"><a asp-area="" asp-controller="Customer" asp-action="Customers"><i class="fas fa-globe-asia"></i>Customers</a></li>
    @* <li class="breadcrumb-item active">Test Category</li> *@
</ul>

<div class="card " id="CustomerListCard">
    <div id="show" class=" card-header collapse-sh bg-transparent" data-toggle="collapse">
        <h5 class="mb-0 row">
            <label class=" btn-collapse-link collapsed Header col-md-6" style="margin-top:0.5rem" aria-expanded="false" aria-controls="ListCollapse">
                Customers List
            </label>
            <button class="btn btn-primary col-md-3 offset-md-3" style="margin-top:0.5rem;margin-bottom:0.5rem" type="button" onclick="AddCustomer()">Add Customer</button>
        </h5>
    </div>
    <div id="ListCollapse">
        <div class="card-body shadow-lg">
            <div class="table-responsive">
                <hr />
                <table class="table table-hover table-bordered" id="tblCustList" style="width:100%">
                    <thead class="bg-light text-center">
                        <tr style="width: 100%">
                            <th>Action</th>
                            <th>Name</th>
                            <th>Father Name</th>
                            <th>Address</th>
                        </tr>
                    </thead>
                    <tbody id="TbodytblCustomersList" class="text-center"></tbody>
                </table>
            </div>

        </div>
    </div>
</div>

<div id="CustomerModal" title="Customer Details">
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label for="FullName">Full Name<span class="text-danger">*</span></label>
                <input type="text" class="form-control" id="FullName" name="FullName" required maxlength="30">
            </div>
        </div>

        <div class="col-md-6">
            <div class="form-group">
                <label for="FathersName">Father's Name<span class="text-danger">*</span></label>
                <input type="text" class="form-control" id="FathersName" name="FathersName" required maxlength="30">
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label for="DOB">Date of Birth<span class="text-danger">*</span></label>
                <input type="date" class="form-control" id="DOB" name="DOB" required>
            </div>
        </div>

        <div class="col-md-6">
            <div class="form-group">
                <label for="Gender">Gender<span class="text-danger">*</span></label>
                <input type="text" class="form-control" id="Gender" name="Gender" required maxlength="7">
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label for="PermanentAddress">Permanent Address<span class="text-danger">*</span></label>
                <input type="text" class="form-control" id="PermanentAddress" name="PermanentAddress" required maxlength="100">
            </div>
        </div>

        <div class="col-md-6">
            <div class="form-group">
                <label for="PresentAddress">Present Address<span class="text-danger">*</span></label>
                <input type="text" class="form-control" id="PresentAddress" name="PresentAddress" required maxlength="100">
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label for="PANNumber">PAN Number</label>
                <input type="text" class="form-control" id="PANNumber" name="PANNumber" maxlength="10">
            </div>
        </div>

        <div class="col-md-6">
            <div class="form-group">
                <label for="MobileNumber">Mobile Number<span class="text-danger">*</span></label>
                <input type="tel" class="form-control" id="MobileNumber" name="MobileNumber" required>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label for="Landline">Landline</label>
                <input type="tel" class="form-control" id="Landline" name="Landline">
            </div>
        </div>

        <div class="col-md-6">
            <div class="form-group">
                <label for="AccountType">Account Type<span class="text-danger">*</span></label>
                <input type="text" class="form-control" id="AccountType" name="AccountType" required maxlength="10">
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label for="OpeningBalance">Opening Balance<span class="text-danger">*</span></label>
                <input type="number" class="form-control" id="OpeningBalance" name="OpeningBalance" required step="0.01">
            </div>
        </div>

        <div class="col-md-6">
            <div class="form-group">
                <label for="AccNo">Account Number</label>
                <input type="text" class="form-control" id="AccNo" name="AccNo">
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label for="CardNo">Card Number</label>
                <input type="text" class="form-control" id="CardNo" name="CardNo">
            </div>
        </div>

        <div class="col-md-6">
            <div class="form-group">
                <label for="PIN">PIN<span class="text-danger">*</span></label>
                <input type="password" class="form-control" id="PIN" name="PIN" required maxlength="4">
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label for="CheckBook">Checkbook</label>
                <input type="checkbox" class="form-check-input" id="CheckBook" name="CheckBook">
            </div>
        </div>

        <div class="col-md-6">
            <div class="form-group">
                <label for="BranchID">Branch ID<span class="text-danger">*</span></label>
                <input type="text" class="form-control" id="BranchID" name="BranchID" required>
            </div>
        </div>
    </div>
</div>

<script>

    let Id = 0;

    var apiBaseUrl = "@ApiSettings.Value.ApiBaseUrl";

    $(document).ready(function () {

        AddCustomer = () => {
            Id = 0;
            dialog.dialog('open');
            $(".savebtn").text('Save');

        }

        BindCustomers = () => {
            debugger
            $.ajax({
               
                type: "GET",
                // url: apiBaseUrl+"/Account/GetCustomers",
                url: apiBaseUrl + "https://localhost:44354/api/Account/GetCustomers",
                dataType: "json",
                success: function (data) {
                    debugger
                    if (data == null) {
                        toastr.warning("No Test Category Data Available", 'Test Category Details', Toastroptions);
                    }
                    else {


                        if ($.fn.DataTable.isDataTable('#tblCustList')) {
                            $('#tblCustList').DataTable().destroy();
                            $('#tblCustList TbodytblCustomersList').empty();
                        }
                        table = $('#tblCustList').DataTable({

                            "lengthMenu": [[5, 10, 25, 50], [5, 10, 25, 50]],

                            "pageLength": 5,
                            language: {
                                searchPlaceholder: "Search records",
                            },
                            "sPaginationType": "full",

                            "searchHighlight": true,
                            "language": {
                                "paginate": {
                                    "previous": '<i class="fa fa-backward PMS-Pagination" title="Previous"></i>',
                                    "next": '<i class="fa fa fa-forward PMS-Pagination" title="Next"></i>',
                                    "first": '<i class="fa fa-fast-backward PMS-Pagination" title="First"></i>',
                                    "last": '<i class="fa fa-fast-forward PMS-Pagination" title="Last"></i>',
                                }
                            },
                            data: data,
                            columns: [
                                {
                                    'sortable': false,
                                    'searchable': false,
                                    'mRender': (data, type, row) => {
                                        debugger
                                        let option = '<span>';
                                        option += '<a onclick="EditCustomer(' + row.customerID + ')"  href="javascript:void(0)" id="lnkEdit_Roles' + row.customerID + '"  title="Edit Customer" class="mr-2 editbtn"  > <i class="fa fa-edit text-secondary editicon"></i></a> ';
                                        option += '<a href="javascript:void(0)"  id="lnkDeleteCustomer' + row.customerID + '"  title="Delete Test Category" onclick="DeleteCustomer(' + row.customerID + ')" class="mr-2 deletebtn" > <i class="fas fa-trash text-secondary deleteicon"></i></a>';
                                        option += '</span>';
                                        return option;
                                    }

                                },

                                { 'data': 'fullName' },
                                { 'data': 'fathersName' },

                                { 'data': 'presentAddress' },

                            ],
                            order: [[1, 'asc']],
                            sort: true,
                            "fnDrawCallback": function () {

                            },
                        });

                    }
                },
                error: function (xhr) {

                    toastr.error(xhr.statusText, 'Customer Details', Toastroptions);

                }
            });
        }

        SaveCustomer = () => {
            
            
            if (Id == 0) {
                var formData = {
                    // userView: {
                    FullName: $("#FullName").val(),
                    FathersName: $("#FathersName").val(),
                    DOB: $("#DOB").val(),
                    Gender: $("#Gender").val(),
                    PermanentAddress: $("#PermanentAddress").val(),
                    PresentAddress: $("#PresentAddress").val(),
                    PANNumber: $("#PANNumber").val(),
                    MobileNumber: $("#MobileNumber").val(),
                    Landline: $("#Landline").val(),
                    AccountType: $("#AccountType").val(),
                    OpeningBalance: $("#OpeningBalance").val(),
                    AccNo: $("#AccNo").val(),
                    CardNo: $("#CardNo").val(),
                    PIN: $("#PIN").val(),
                    CheckBook: $("#CheckBook").is(":checked") ? "Yes" : "No",
                    BranchID: $("#BranchID").val()
                    // },
                };

                // Send an AJAX POST request to your server to save the data
                $.ajax({
                    type: "POST",
                    url: "https://localhost:44354/api/Account/UpdateCustomer",
                    // data: JSON.stringify(formData),
                    data: formData,
                    contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                    // contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        alert("Data saved successfully!");
                        BindCustomers();
                        dialog.dialog('close');
                    },
                    error: function (error) {
                        alert("Error: " + error.responseText);
                    }
                });
            }
            else {
                var formData = {
                    // userView: {
                    CustomerID:Id,
                    FullName: $("#FullName").val(),
                    FathersName: $("#FathersName").val(),
                    DOB: $("#DOB").val(),
                    Gender: $("#Gender").val(),
                    PermanentAddress: $("#PermanentAddress").val(),
                    PresentAddress: $("#PresentAddress").val(),
                    PANNumber: $("#PANNumber").val(),
                    MobileNumber: $("#MobileNumber").val(),
                    Landline: $("#Landline").val(),
                    AccountType: $("#AccountType").val(),
                    OpeningBalance: $("#OpeningBalance").val(),
                    AccNo: $("#AccNo").val(),
                    CardNo: $("#CardNo").val(),
                    PIN: $("#PIN").val(),
                    CheckBook: $("#CheckBook").is(":checked") ? "Yes" : "No",
                    BranchID: $("#BranchID").val()
                    // },
                };

                $.ajax({
                    type: "POST",
                    url: "https://localhost:44354/api/Account/UpdateCustomer?userId="+Id,
                    // data: JSON.stringify(formData),
                    data: formData,
                    contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                    // contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        debugger
                        alert("Data updated successfully!");
                        BindCustomers();
                        dialog.dialog('close');
                    },
                    error: function (error) {
                        alert("Error: " + error.responseText);
                    }
                });
            }
        }

        EditCustomer = (customerId) => {
            Id = customerId;
            debugger
            dialog.dialog('open');
            $(".savebtn").text('Update');
            $.ajax({
                type: "GET",
                url: "https://localhost:44354/api/Account/GetUserById",
                data: { userId: parseInt(customerId) },
                Accept: "application / json",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    debugger
                    $("#FullName").val(response.fullName);
                    $("#FathersName").val(response.fathersName);
                    $("#DOB").val(response.dob);
                    $("#Gender").val(response.gender);
                    $("#PermanentAddress").val(response.permanentAddress);
                    $("#PresentAddress").val(response.presentAddress);
                    $("#PANNumber").val(response.panNumber);
                    $("#MobileNumber").val(response.mobileNumber);
                    $("#Landline").val(response.landline);
                    $("#AccountType").val(response.accountType);
                    $("#OpeningBalance").val(response.openingBalance);
                    $("#AccNo").val(response.accNo);
                    $("#CardNo").val(response.cardNo);
                    $("#PIN").val(response.pin);
                    // $("#CheckBook").is(":checked") ? "Yes"  : "No";
                    if (response.checkBook == "Yes") {
                        $("#CheckBook").prop("checked", true);
                    }
                    else {
                        $("#CheckBook").prop("checked", false);
                    }
                    $("#BranchID").val(response.branchID);
                },
                
                error: function (xhr) {
                    // toastr.error(xhr.statusText, "Category Details", Toastroptions);
                }
            });
        }

        DeleteCustomer = (customerId) => {
            if (confirm("Are you sure you want to delete this customer?")) {
                // Send an AJAX DELETE request to your server to delete the customer
                $.ajax({
                    type: "DELETE",
                    url: "https://localhost:44354/api/Account/DeleteCustomerAccount?CustomerAccountId=" + customerId, // Replace with the correct delete endpoint
                    dataType: "json",
                    success: function (response) {
                        // Handle success (e.g., refresh the customer list)
                        alert("Customer deleted successfully!");
                        // You may want to reload the customer list or update the UI here
                    },
                    error: function (xhr) {
                        // Handle error
                        alert("Error: " + xhr.statusText);
                    }
                });
            }
        }

        var dialog = $("#CustomerModal").dialog({
            autoOpen: false,
            height: 850,
            width: 800,
            modal: true,
            // close: CancelInspecetionDetails,
            position: { my: "center center", at: "center center", of: window },
            buttons: [
                {
                    text: "Save",
                    "class": 'savebtn btn btn-primary',
                    "title": "Save",
                    click: SaveCustomer,

                },
            ]
        });

        BindCustomers();

    });
</script>
